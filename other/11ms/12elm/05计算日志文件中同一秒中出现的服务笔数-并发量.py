#!/usr/bin/env python
#-*- coding:utf-8 -*-

#需求：日志文件中，不同的服务，每调用依次，就记录一条
# 请计算一天中，是哪一秒，调用的服务最多（即那1秒钟是一天中，服务调用两最大的）
"""
思路：
1、读取文件
2、遍历循环文件的每一行，每一行都是一个字符串
3、对字符串做拆分，空格作为拆分符号，将时间这个子字符串，依次添加到列表
   注意：这里用拆分更通用，不能用索引号切片取值，除非服务编码都是位数相同，比如：5位
4、计算列表中，那个时间，出现的次数最多
   注意：不论述字符串的每个字符，出现的次数，可以用count；计算列表中每个元素出现的次数，也可以用count
   用算法实现

注意点：
步骤：
1、先计算一天中，哪一秒，调用的服务量最大--ok
2、在计算一天中，哪一秒，那个服务的调用量最大--nok   时间是写死的，不是活的--nok
"""

f = open("log.txt")
li1 = []
# dic11 = {}
for i in f:
    # print(i,end="")   #end默认是换行，文件本身有换行，所以有多余空行，end=""可以去掉换行
    a,b,c,d=i.split()
    tu1 = (c,d)
    li1.append(tu1)
    # dic11[c] = d
# print() #换行
# print(dic11)
print(li1)  #['09:57:55', '09:57:55', '09:57:55',
# '09:57:55', '09:57:55', '09:57:55', '09:57:56', '09:57:56', '09:57:56', '09:57:56']

# dic1 = {}
# for i in li1:
#     dic1[i]= li1.count(i)  #count函数是统计列表中每个元素出现的次数  #内置函数
# print(dic1)  #{'09:57:55': 6, '09:57:56': 4}

# #如何计算count函数的算法？  -字典的嵌套
dic1 = {}
for i in li1: #1 循环遍历列表
    t1 = i[0]  #时间
    service1  = i[1]  #服务编码

    if t1 not in dic1:  #1 如果时间不在字典1
        dic2 = {}  #2 定义字典2
        dic2[service1] = 1  #3 给字典2添加键值对 key是服务编码 value是1
        dic1[t1] = dic2   #4 给字典1添加键值对  key是时间  value是字典2（把字典2作为字典1的value--k2）
    else:  # 5 如果时间在字典1中
        # if service1 not in dic1[t1]:  #6 判断服务编码是否在字典2中  关键点dic2必须用dic1[t1]来表示
        if service1 not in dic2:  #6 判断服务编码是否在字典2中
            dic2[service1] = 1    #7 如果不在，设置初始值1
        else:
            dic2[service1] += 1  # 8 如果在，value自增1

    """
    ('09:57:55', '1000')  {'09:57:55':{"1000":1}}  1
     ('09:57:55', '1000') {'09:57:55':{"1000":2}}  2
      ('09:57:55', '1000') {'09:57:55':{"1000":3}} 3
       ('09:57:55', '2000') {'09:57:55':{"1000":3,"2000":1}} 4
       ('09:57:55', '2000') {'09:57:55':{"1000":3,"2000":2}} 5
       ('09:57:55', '2000') {'09:57:55':{"1000":3,"2000":3}} 6
       ('09:57:56', '3000') {'09:57:55':{"1000":3,"2000":3,"3000":1},'09:57:56':{"1000":3,"2000":3,"3000":1}}
       ('09:57:56', '3000') {'09:57:55':{"1000":3,"2000":3,"3000":2},'09:57:56':{"1000":3,"2000":3,"3000":2}}




    """


# print(dic1)  #{'09:57:55': 6, '09:57:56': 4}
# #意思是一天中，09:57:55这个时刻，有6笔服务调用量；09:57:56这个时刻，有4笔服务调用量
# # 可见 09:57:55这个时刻的并发量最大
print(dic1)   #{'09:57:56': {'3000': 4}, '09:57:55': {'3000': 4}}

dic22 = {'09:57:55': {"1000":1} ,
         '09:57:56': {"1000": 3}
         }









