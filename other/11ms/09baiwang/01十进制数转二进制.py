#!/usr/bin/env python
#-*- coding:utf-8 -*-

i= 6
s1 = ""
while i>=1:  #0 条件判断用到while
    if i%2 == 0: #1偶数走这个分支
        # 十进制数除以2的商是j1，余数是0，最后一位就是0；商j1再除以2的商j2，余数是0，倒数第二位就是0；
        #  商j2除以2的商是j3，余数是1，倒数第三位就是1，依次类推，直到商小于等于1，循环结束
        s1 = s1 + "0"
    elif i%2 == 1:   #2奇数走这个分支
        s1 = s1 + "1"
    i = i // 2   #注意点：必须地板除才行，如果是除号，只能满足偶数，奇数是不适合的（奇数除以2的商是浮点数，而不是整数），
    # 地板除可以同时满足奇数和偶数
"""
如果是偶数i=4
第一次 s1 = "0"          "0"
第二次 s1 = "0"+"0"      "00"
第三次 s1 = "0"+"0"+"1"  "001"
"""
s1 = s1[::-1]  #需要将字符串反转才行（因为字符串的拼接是从个位，到十位到百位这么拼接的---个位+十位+百位，这个是倒着拼接）
#正常从左到右的拼接是从千位+百位+十位+个位这么拼接
# print(s1)  #1000  字符串类型
i1 = int(s1)   #字符串转换成int
print(i1)  #1000  int类型

"""
思路总结：
十进制数转换成二进制数--算法
1、十进制是num除以2，商是j1,余数是0，二进制数b1,个位就是0
    商j1除以2，商是j2，余数是0，二进制数b1,十位就是0
    商j2除以2，商是j3，余数是1，二进制数b1,百位就是1
    。。。
    依次类推，直到商小于等于1，循环结束

注意点：
1、分支1：余数是0的时候，拼接0
2、分支2：余数是1的时候，拼接1
3、while循环的提交是num>=1
4、num= num//2  十进制数不断的除以2，必须是地板除，而不是除号，因为如果num是奇数，除以2后，就是浮点数，而不是整数
   地板除就可以解决这个问题
5、拼接之后，是从个位+十位+百位这么拼接字符串的
   但是最终需要的二进制数是百位+十位+个位
   所有需要字符串反转
6、将反转后的字符串，转换成int即可
"""















