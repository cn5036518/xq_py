#!/usr/bin/env python
#-*- coding:utf-8 -*-

''''''
'''
一、名称空间的分类
1、内置名称空间：存到python解释器为我们存放的名字，比如：print list dict等（内置函数所在的位置）
2、全局名称空间：python文件中，函数之外的变量都属于全局命名空间（自定义函数名字和自定义变量名字所在的位置）
3、局部名称空间：在函数中申明的变量存放在局部名称空间

加载顺序：内置、全局、局部（函数被执行的时候）
取值顺序：局部、全局、内置    --注意点

二、作用域的分类：
1、全局作用域：内置名称空间+全局名称空间
2、局部作用域：局部名称空间

globals()函数可以打印出全局作用域中的内容（函数和变量）
locals()函数可以打印出当前位置所在作用域的内容（可以打印全局作用域，也可以打印局部作用域，取决于这个函数所在的位置）

'''

#一、取值顺序
#1、先取值局部，后取值全局，局部取不到，就取值全局
a = 10
def func1():
    print(a)
func1()  #10
# 先取值局部命名空间（函数内），局部没有值；接着取值全局命名空间，于是打印10

#2、先取值局部，后取值全局
a = 10
def func2():
    a = 20
    # print(globals())  #这个函数不管是在函数内还是函数外，都会打印全局作用域，和函数本身的位置无关
    print(locals())
    print(a)
func2()  #20
# 先取值局部命名空间（函数内），局部有值，就不会再去取值全局，直接打印20

#二、作用域
#1、全局作用域
# print(globals())  #打印内置命名空间（比如：print()函数-属于'__builtins__' 等）、函数名字、全局变量名字
# {'__doc__': '', '__cached__': None, '__package__': None,
#  'func1': <function func1 at 0x0000000000706730>, 'a': 10,     #自定义函数名和自定义全局变量名字
# '__file__': 'D:/Program/JetBrains/PycharmProjects/xq_py/全栈16/day010 函数进阶/05 名称空间.py', '__name__': '__main__',
# '__builtins__': <module 'builtins' (built-in)>,
# 'func2': <function func2 at 0x00000000027C9C80>,   #print()属于内置函数（内置命名空间）
# '__loader__': <_frozen_importlib.SourceFileLoader object at 0x00000000022899B0>}

#2、当前位置作用域
# print(locals())
#当locals()函数的位置在全局作用域中，locals函数和globals函数输出的内容是一样的，都是打印全局作用域中的（变量、函数-内置函数或者自定义函数）
#当locals()函数的位置在函数中的局部作用域时，locals()会打印局部作用域中的变量  {'a': 20}









