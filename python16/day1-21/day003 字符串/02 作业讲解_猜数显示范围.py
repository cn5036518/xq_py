#!/usr/bin/env python
#-*- coding:utf-8 -*-

# 5、利用while语句写出猜⼤小的游戏：
# 设定⼀个理想数字比如：66，让用户输入数字，如果比66大，则显示猜测
# 的结果大了；如果比66小，则显示猜测的结果小了;只有等于66，显示猜测结果
# 正确，然后退出循环。--提示每次都显示下一次要猜测的范围

"""
思路:
1 先实现基本的while循环1
2 再显示下一次要猜测的范围
    1 空白列表,把每次输入的数,存进去
    2 空白列表的元素排序,从小到大
    3 计算当前输入的数,在列表中的下标index
    4 如果当前输入的数,排序后,在列表中的index是0
        说明输入的数太小
        提示num+1,100
    5 如果当前输入的数,列表排序后,在列表中的index是-1
        说明输入的数太大
        提示

"""
#第一轮:连续输入的4个数
#   75   74,75  73,74,75  50,73,74,75    范围是:1,当前输入数-1(当输入的数大于期望数,且当输入的数是列表中最小的)
#    当输入的数小于期望数,且当输入的数不是列表中最大的,范围是:当前输入数+1,当前输入数右边的数-1

#第二轮:连续输入的4个数
#   50   50,60  50,60,65  50,60,65,70   范围是:当前输入数+1,100(当输入的数小于期望数,且输入的数是列表中最大的)
#   当输入的数大于期望数,且当输入的数不是列表中最小的,范围是:当前输入数左边的数+1,当前输入数-1

count =1
result = 66
li = []
while count<=10:  #给10次猜的机会
    guess_num = input("请猜数:")
    guess_num = int(guess_num)  #字符串转换成整数
    li.append(guess_num)
    li.sort()
    print(li)
    index_num = li.index(guess_num)
    # print(index_num)
    if guess_num > result:  #1当前输入的数大于期望数
        # print("猜大了")
        if index_num == 0:  # 2当前输入的数大于期望数且 当前输入的数是列表中最小的 范围是:1,当前输入数-1
            print("猜大了,你下次应该输入%s-%s" % (1,guess_num -1))  #1
        else:  # 2当前输入的数大于期望数 且当前输入的数是列表中不是最小的   范围是:当前输入数左边的数+1,当前输入数-1
            print("猜大了2,你下次应该输入%s-%s" % (li[index_num-1]+1, guess_num -1))
    elif guess_num < result:  #1当前输入的数小于期望数
        # print("猜小了")
        if li[-1] == guess_num:  #3当前输入的数小于期望数且 当前输入的数是列表中最大的 范围是:当前输入数+1,100
            print("猜小了,你下次应该输入%s-%s" % (guess_num +1,100))  #1
        else:  #4当前输入的数小于期望数且 当前输入的数不是列表中最大的 范围是:当前输入数+1,当前输入数右边的数-1
            print("猜小了2,你下次应该输入%s-%s" % (guess_num +1,li[index_num+1]-1))
    else:
        print("猜对了,游戏结束")
        break  #跳出整个循环
    count+=1

"""
上述的测试数据是75,74,73,50
如果换成75,90就会提示有问题(因为75都大了,就不应该输入90)

"""














