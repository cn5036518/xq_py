#!/usr/bin/env python
#-*- coding:utf-8 -*-


# 7.使⽤用while循环输⼊入 1 2 3 4 5 6 8 9 10   不输出7
#方法1
# count=1  #计数器的初始值
# while count<=10:  #限定范围  10
#     if count!=7:
#         print(count)  #这里就不会输出7,前面做了条件判断了
#     count+=1  #自增
# print("-------1")

#方法2
# count=0
# while count<=10:
#     if count == 7:
#         count += 1   #这里当count是7的时候,加一就是8了,然后continue后,就不执行最后2行了,就不打印7了,
#         # 当count是8的时候,继续执行最后2行    #注意:没有这一行,程序就会卡在7上,死循环了
#         continue  #跳出当次循环,进入下一次循环   注意:这里只能输出1-6,然后就卡住了(程序一直再跑,死循环),
#         # 因为continue后面的count+=1也不执行了
#     print(count)
#     count += 1
# print('---------1')

# 9.输出 1-100 内的所有奇数
# #for 方法1
# for i in range(1,101,2):  #步长是2
#     print(i)
# print('---------2')
#
# #for方法2
# for i in range(1,101):
#     if i%2==1:  #除以2的余数是1,就是奇数
#         print(i)
# print('---------3')
#
# #for方法3
# for i in range(1,101):
#     if i%2==0:  #除以2的余数是0,就是偶数--continue,余下的就是奇数
#         continue  #跳过当次循环,进入下一次循环
#     print(i)
# print('---------4')


# 10.输出 1-100 内的所有偶数
#for 方法1
# for i in range(2,101,2):   #步长是2    #最简洁
#     print(i)
# print('---------5')

#while 方法2
# count=2
# while count<=100:
#     print(count)
#     count+=2  #自增2和for循环的步长2是一样的
# print('---------6')

#for 方法3
# for i in range(2,101):
#     if i%2 == 0:  #除以2的余数是0,说明是偶数   #最直接
#         print(i)
# print('---------7')

#for 方法4     #排除法
# for i in range(2,101):
#     if i%2 == 1:  #除以2的余数是1,说明是奇数,跳过,余下的就是偶数
#         continue  #跳出当次循环,进入下一次循环
#     print(i)  #注意,前面continue后,这个print需要和if同级别,才能输出奇数
# print('---------8')

# 11.求1-2+3-4+5 ... 99的所有数的和.
"""
思路1
1 计算奇数的和
2 计算偶数的和
3 奇数和-偶数和

思路2
1 判断是奇数,就累加
2 判断是偶数,就累减

#注意:思路2:最后的结果存在一个变量,简洁
    思路2:累加和累减的  最后的结果分别存在2个变量,再相减或者相加 好理解

"""
#思路1 计算奇数和
sum = 0 #存放最后的结果--和
for i in range(1,100,2):  #步长是2
    sum = sum +i  #
    #sum第一次取值是0 第二次取值是0+1 第三次取值是0+1+3 第四次取值是0+1+3+5
    # print(i)
print(sum) #2500

#计算偶数和
sum1 = 0 #存放最后的结果--和
for i in range(2,100,2):  #步长是2
    sum1 = sum1 +i  #
    #sum第一次取值是0 第二次取值是0+1 第三次取值是0+1+3 第四次取值是0+1+3+5
    # print(i)
print(sum1) #2450

#奇数和-偶数和
print(sum-sum1) #50
# print("---------1")

# 11.求1-2+3-4+5 ... 99的所有数的和.
# 思路2
# 1 判断是奇数,就累加,保存在sum
# 2 判断是偶数,就累减,保存在sum  --sum类似全局变量  #推荐 最简洁
sum = 0
for i in range(1,100): #1-99
    if i%2==1:  #判断如果是奇数,就累加
        sum = sum +i  #累加
        #sum第一次取值是0 第二次取值是0+1 第三次取值是0+1+3 第四次取值是0+1+3+5
        # print(i)
    # elif i%2 == 0:  #如果是偶数,就累减    #01好理解
    else:  #否则,就是偶数,就累减        #02更简洁
        sum = sum -i   #累减   #注意:sum类似全局变量
        # print(sum)  #-1 -2 -3 -4
        #sum第一次取值是0+1-2 第二次取值是0+1+3-2-4 第三次取值是0+1+3+5-2-4-6 第四次取值是0+1+3+5+7-2-4-6-8
print(sum)  #50
# print("---------2")

# 11.求1-2+3-4+5 ... 99的所有数的和.
# 思路3  #分步,好理解
# 1 判断是奇数,就累加,保存在sum1
# 2 判断是偶数,就累减,保存在sum2
sum_jishu = 0
sum_oushu = 0
for i in range(1,100): #1-99
    if i%2==1:  #判断如果是奇数,就累加
        sum_jishu = sum_jishu +i  #累加
        #sum第一次取值是0 第二次取值是0+1 第三次取值是0+1+3 第四次取值是0+1+3+5
        # print(i)
    elif i%2 == 0:  #如果是偶数,就累减    #01好理解
    # else:  #否则,就是偶数,就累减        #02更简洁
        sum_oushu = sum_oushu -i   #累减   #注意:
        # print(sum)  #-1 -2 -3 -4
        #sum第一次取值是-2 第二次取值是-2-4 第三次取值是-2-4-6 第四次取值是2-4-6-8
print(sum_jishu+sum_oushu)  #50  #这里是加号 而不是减号
# print("---------3")

# 11.求1-2+3-4+5 ... 99的所有数的和.
# 思路4
# 1 判断是奇数,就累加,保存在sum1
# 2 判断是偶数,就累加,保存在sum2
sum_odd = 0  #奇数
sum_even = 0 #偶数
for i in range(1,100): #1-99
    if i%2==1:  #判断如果是奇数,就累加
        sum_odd = sum_odd +i  #累加
        #sum第一次取值是0 第二次取值是0+1 第三次取值是0+1+3 第四次取值是0+1+3+5
        # print(i)
    elif i%2 == 0:  #如果是偶数,就累减    #01好理解
    # else:  #否则,就是偶数,就累减        #02更简洁
        sum_even = sum_even +i   #累加   #注意:
        # print(sum)  #-1 -2 -3 -4
        #sum第一次取值是2 第二次取值是2+4 第三次取值是2+4+6 第四次取值是2+4+6+8
print(sum_odd-sum_even)  #50  #这里是减号










