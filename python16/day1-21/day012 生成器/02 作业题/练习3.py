#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@time:  2019/10/7 17:10
#@author:wangtongpei

# 2，用列表推导式做下列小题
# (7)	构建一个列表：[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
#方法1
li1 = [i for i in range(19) if i%2==0]  #
print(li1) #[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]

#方法2 老师思路  类比：切片步长为2
li72 = [i for i in range(0,19,2)] #步长是2
print(li72) #[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
print('----------------------1')

# (8)	有一个列表l1 = ['alex', 'WuSir', '老男孩', '太白']
# 将其构造成这种列表['alex0', 'WuSir1', '老男孩2', '太白3']
#题目分析：将列表元素和列表索引号拼接在一起，形成新的列表
#方法1
li1 = ['alex', 'WuSir', '老男孩', '太白']
li2 = ['0','1','2','3']
li3 = [(li1[i]+str(j)) for i in range(len(li1)) for j in range(4) if i==j] #索引号位置对齐
#关键点：1通过索引号来取值  2条件判断 i==j
print(li3)  #['alex0', 'WuSir1', '老男孩2', '太白3']

#方法2  温故知新 推荐 更简洁
li1 = ['alex', 'WuSir', '老男孩', '太白']
li82 = [(li1[i]+str(i)) for i in range(len(li1))]  #循环遍历列表，根据索引号取值
#注意：索引号是数字，必须先转换成字符串，才能拼接
#分析：li1[i]  这个是根据索引号取列表的元素  关键点 必须掌握
#      str(i)  是将索引号转换成字符串
print(li82)  #['alex0', 'WuSir1', '老男孩2', '太白3']
print('----------------------2')

# (9)有以下数据类型：
# x = {
#     'name':'alex',
#     'Values':[{'timestamp':1517991992.94,
#          'values':100,},
#         {'timestamp': 1517992000.94,
#         'values': 200,},
#         {'timestamp': 1517992014.94,
#          'values': 300,},
#         {'timestamp': 1517992744.94,
#          'values': 350},
#         {'timestamp': 1517992800.94,
#          'values': 280}
# 		],}
# 将上面的数据通过列表推导式转换成下面的类型：
# [[1517991992.94, 100], [1517992000.94, 200], [1517992014.94, 300], [1517992744.94, 350], [1517992800.94, 280]]
x = {
    'name':'alex',
    'Values':[{'timestamp':1517991992.94,
         'values':100,},
        {'timestamp': 1517992000.94,
        'values': 200,},
        {'timestamp': 1517992014.94,
         'values': 300,},
        {'timestamp': 1517992744.94,
         'values': 350},
        {'timestamp': 1517992800.94,
         'values': 280}
		],}
li1 =[[1517991992.94, 100], [1517992000.94, 200], [1517992014.94, 300], [1517992744.94, 350], [1517992800.94, 280]]
# for i in x['Values']:
#     print(i)

#方法1   #题目没有看清楚，最后的5%没有做到，闭环，不留尾巴--wujun
li2 = [(i['timestamp'],i['values']) for i in x['Values'] ] #题目没有看清楚
#再简单的题目，都需要只字不差的阅读题目（解决办法：只字不差阅读2遍）
print(li2)  #[(1517991992.94, 100), (1517992000.94, 200),   #这个是列表嵌套元组，题目要求的是列表嵌套列表
# (1517992014.94, 300), (1517992744.94, 350), (1517992800.94, 280)]

#方法2   温故知新 第二次读题目就完全正确了
li92 = [[i['timestamp'],i['values']] for i in x['Values'] ]
print(li92)  #[[1517991992.94, 100], [1517992000.94, 200],
#  [1517992014.94, 300], [1517992744.94, 350], [1517992800.94, 280]]

'''
小结：
现象：第5题少了第五期和第9题列表内嵌了元组，而不是列表
      第一次读题后，做错了，最后5%没有完成
      第二次读题后，做对了
分析：再简单的问题，都需要只字不差的阅读题目，避免自己会做的主动丢分
解决办法：对于题目，第一次做的时候，就只字不差的阅读题目2遍
扩展：对于第一遍阅读题目后，没有思路或者没有看明白题目意思的情况
      应对方法：反复只字不差的阅读几遍题目，刻意放慢速度阅读
'''











