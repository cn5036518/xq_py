#!/usr/bin/env python
#-*- coding:utf-8 -*-

''' 第二个三引号之间的内容就是醒目的字体，第一个三引号之间是灰色的注释字体'''
"""
本节内容:
1. 什么是函数
2. 函数定义, 函数名, 函数体以及函数的调⽤
3. 函数的返回值
4. 函数的参数

一、什么是函数
我们可以先去定义一个事情或者功能(接口、服务、函数、功能). 等到需要的时候直接去用就好了.
那么这里定义的东西就是一个函数.
函数: 对功能或者动作的封装

二、函数的定义
def 函数名（形参列表）：
    函数体
函数体：函数被调用后，要执行的代码

函数的调用
函数名()

函数的调用执行过程
1、定义函数
2、调用函数
3、准备开始执行函数
4、执行函数体
5、函数体的代码执行完毕，本次调用完毕

问题：
函数调用后，需要得到一个结果--就是返回值（return）

三、函数的返回值
1、返回一个值
2、返回多个值（多个值之间用逗号隔开），多个值构成一个元组（调用者会接收一个元组），可以解构
3、return后面空白或者没有return，默认返回的是None
4、遇到return，其后面的代码就不会执行，函数执行会终止
    函数的return就类似于for循环中的break

问题：
有啥办法，可以使用不同的聊天工具，但是又不修改源代码呢？
--有办法，传递参数来解决

四、函数的参数
1、定义函数
def 函数名(形参列表):
    函数体

2、调用函数
函数名(实参列表)

概念：
1、形参：写在函数定义处的变量就是形式参数（简称-形参）
2、实参：函数调用处给出的具体值就是实际参数（简称-实参）
3、传参：函数调用过程中，把实参赋值给形参的过程就是传参

参数的分类
001 实参的分类
    1、位置参数：按照形参的位置顺序，传入实参--最常用
    2、关键字参数：不需要记住形参的位置顺序，只需要实参按照形参的关键字来传递即可
                  适用场景：形参列表比较长，形参的位置不好记忆的时候
    3、混合参数：
        规则：必须是位置参数放在前面，关键字参数放在最后（否则，会报错）
        例子：open('xxx.txt',mode='r',encoding='utf-8')

002 形参的分类
    1、位置参数：实参按照形参的位置顺序，传入--最常用
    2、默认值参数：
        规则：位置参数必须在前面，默认值参数必须在最后（否则，会报错）
        例子：
        register(name,age,sex='男')  #定义函数（适用场景：大部分学生是男的情况下，指定默认参数 sex='男'）
        register('jack',18)  #调用函数1，参数3不写，使用默认参数-男
        register('lucy',17,'女') #调用函数2  参数3-女 覆盖了默认参数
    3、动态参数（下节介绍  *arg,**kwargs）
"""




















