#!/usr/bin/env python
#-*- coding:utf-8 -*-

''''''
'''
1、函数名的命名规范和变量是一样的
2、函数名可以给另外一个函数名进行赋值
   （类比：变量可以给另外一个变量进行赋值）
3、函数名可以作为参数进行传递
   （类比：变量可以作为参数进行传递）
4、函数名表示的是函数的内存地址
5、函数名后面的()表示函数的执行

函数名可以作为返回值
函数名可以作为参数
函数名可以作为列表的元素
'''

#1、函数名作为参数进行传递
def func1():
    print('我是一个单纯的函数')

def func2(args):
    args()  #我是一个单纯的函数  这里函数名作为参数进行了传递（和变量名一样，可以作为参数进行传递）
    print('我是',args) #我是 <function func1 at 0x0000000002006730>
    #这里函数名就是内存地址

func2(func1)
print('-------------------1')

#2
def outer():
    def inner():
        print('我是里面的')
    return inner
print(outer())  #<function outer.<locals>.inner at 0x00000000026320D0>
#函数inner的内存地址
outer()()  #我是里面的   等效于inner()
print('-------------------2')

#3 同时执行多个函数
def eat():
    print("吃饭")
def drink():
    print('喝水')

li1 = [eat,drink]  #函数名放入列表
for i in li1:
    i()  #函数名后面的小括号，表示函数的执行
# 吃饭
# 喝水
print('-------------------3')

#4变量可以做计算，函数名不行
a =10
print(a+10)  #20

def eat():
    pass
# print(eat+20)  #报错 TypeError: unsupported operand type(s) for +: 'function' and 'int'
print('-------------------4')

#5 代理设计模式--后面讲到类的时候，会进一步展开
def panpan():
    print('我是潘潘')
def pingping():
    print('我是瓶瓶')

def ximen():
    print('我是大官人')

def wangpo(male,female): #核心业务逻辑（一直是不变的，传不同的参数即可）--代理人
    # 形参：函数名  王婆代理了西门和潘潘
    male()
    female()

wangpo(ximen,panpan)  #实参：函数名
# 我是大官人
# 我是潘潘

wangpo(ximen,pingping)
# 我是大官人
# 我是瓶瓶
print('-------------------5')

#6 __name__内置属性 找到函数名的原始名字
def eat():
    print('吃饭')
a = eat
b = a
c = b
d = c
d()  #吃饭
print(d.__name__)  #eat
#函数名字经过多次传递后，要想找到原函数名，用__name__属性
print('-------------------6')

#7 函数的注释
def func1(a1,b1):
    """
    #第一行输入函数的功能--这个函数是用来做什么的
    :param a1:  函数形参的含义
    :param b1:
    :return:   函数返回值的含义
    """
    pass
    return
func1(1,2)
print(func1.__doc__)  #打印函数的注释，根据函数的注释，不看代码就能都改看出这个函数是用来做什么的
print(print.__doc__)
print(str.join.__doc__)
print('-------------------7')

'''
1、按照pep规范，函数定义前的2行需要是空行（即def之上的2行是空行）
2、在函数定义中，3个单引号或者3个双引号回车，无法自动添加注释的话
3、可以移动鼠标到函数定义的函数名字处，当出现小灯泡的时候，点击第二项，就会出现函数的注释

小结：
由于三个引号回车后，无法自动添加函数注释--1
且小灯泡也不是经常可以出来--2
所以，如果要给函数添加注释，客厅白色电脑可以在本地minipad2上 全部--03全栈16--other--03函数的注释
将函数的注释格式复制过来即可，写函数或者类中方法的注释，养成良好的习惯
或者直接用print这个函数的注释（看官网文档或者按住ctrl，左键单击代码中的print）
复制过来，然后在此基础上进行修改

函数或者类中的方法，写标准明确的注释的好处：
1、梳理思路
2、态度（google注释内容行数不超过1/3的代码，不允许提交）
3、方便自己或者别的同学阅读

函数或者类中的方法的注释内容：
1、函数实现的功能描述
2、参数列表的含义描述
3、返回值的含义描述

'''
















