#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@time:  2019/11/29 8:14
#@author:wangtongpei
#@email: cn5036520@163.com

''''''
'''
1.	简述编写类和执行类中方法的流程。
   1、先定义一个类--画图纸
        class 类名:
            pass
    2、类中，编写构造方法和普通方法
        class 类名:
            def __init__(self):
                pass
            def method1(self):
                pass
    3、新建对象，自动调构造方法
        对象 = 类()
    4、对象调方法
        对象.方法()

2.	简述面向对象三大特性？
    1、封装
        狭义：把一组属性封装到一个对象
            比如：创建一个对象，传入实参列表
        广义：代码块、函数、对象、类、模块py文件都是封装
            比如：把封装成一个黑盒子，不同的输入会给出不同的输出，说明黑盒子具备相关功能

    2、继承
        1、子类可以继承父类中除了私有属性之外所有的内容
        2、子类方法名与父类相同，会覆盖父类的方法
        3、子类继承多个父类，如果2个父类的方法名相同，子类会继承第一个父类的方法

    3、多态
        1、拿动物园，饲养员饲养动物来说明
        2、建4个类，
           动物类-父类
                方法是：吃东西
           猴子类-子类1
                方法是：吃香蕉
           老虎类-子类2
                方法是：吃肉
           饲养员类
                方法是;饲养动物
                关键点：不管是什么具体动物，饲养员都统一当做动物-统称来喂养
        3、新建对象3个
            1、一只猴子
            2、一只老虎
            3、一个饲养员

        4、对象调方法
            饲养员对象调饲养方法，参数是猴子对象
            饲养员对象调饲养方法，参数是老虎对象
            ----实际参数是具体的动物对象

3.	将以下函数改成类的方式并调用：
     def func(a1):
          print(a1)

      class A:   #定义类
          def __init__(self,a1):
              self.a1 = a1
          def func(self):
              print(self.a1)

       a1 = A('哈哈')  #新建对象，自动调构造方法
       a1.func()  #对象调方法

4.	方法和函数的区别？
    1、类中的函数叫方法，方法需要传递self（self表示正在执行动作的对象本身）
    2、类之外的函数叫函数,函数不需要传递self

5.	什么是构造方法？
    1、新建对象的时候，会自动调构造方法
       类比：出场设置，默认值

'''
















