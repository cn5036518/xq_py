#!/usr/bin/env python
#-*- coding:utf-8 -*-

# 4. 车牌区域划分, 现给出以下车牌. 根据车牌的信息, 分析出各省的车牌持有量.
cars = ["鲁A32444","鲁B12333","京B8989M","黑C46555","沪B25041"]
dic2 = {"沪":"上海","黑":"黑龙江","鲁":"山东","鄂":"湖北"}
#结果输出 {"黑龙江":2,"山东":1,"北京":1}

"""
步骤：
1 先输出  {"黑":2,"鲁":1,"京":1}
2 然后输出 {"黑龙江":2,"山东":1,"北京":1}
"""

#方法1   #分步输出
#1 先输出  {"黑":2,"鲁":1,"京":1}
dic1 = {}
for i in cars:
    province1 = i[0]
    if province1 not in dic1:  ##2   #关键点：判断是否在空字典中，而不是判断是否在字典locals
        dic1[province1] = 1 #如果不在空字典中，就设置value是1
    else:  #2如果已经在字典中，value自增1（这里的value有2种方式，方式1是1-写死了，方式2是 dic1[province1]表示value）
        dic1[province1] += 1

print(dic1)  #{'黑': 1, '京': 1, '鲁': 2}
dic2 = {"黑": "黑龙江", "鲁": "山东", "京": "北京"}
#结果输出 {"黑龙江":2,"山东":1,"北京":1}

cars = ["鲁A32444","鲁B12333","京B8989M","黑C46555","沪B25041"]
dic2 = {"沪":"上海","黑":"黑龙江","鲁":"山东","鄂":"湖北"}

"""
思路：
1 新建空字典dic3
2 通过字典1的key遍历，内循环是遍历dic2
   判断字典1的key和字典2的key是否相等，如果相等，就取出字典2的key对应的值k1
   把k1作为key添加到空字典dic3
3 取出字典1的key对应的值v1，把这个v1作为k1的value添加到空字典dic3

方法1已经ok
    1 先输出  {"黑":2,"鲁":1,"京":1}  #字典1-dic1
        1、新建空白字典-dic1
        2、遍历循环列表
            判断列表的元素的首位是否在空字典3中，
            如果不在，就设置dic1[i] = 1
            如果在，就自增1 dic1[i] += 1

    2 然后输出 {"黑龙江":2,"山东":1,"北京":1}  字典3
        1、新建空白列表-dic3
        2、遍历循环字典1
            判断字典1的key是否在字典2中：
            如果在，dic2[i]取出字典2的value，作为字典3的k1
                将字典1的value取出--dic1[i],作为字典3的v1

    cars = ["鲁A32444","鲁B12333","京B8989M","黑C46555","沪B25041"]
    dic2 = {"沪":"上海","黑":"黑龙江","鲁":"山东","鄂":"湖北"}

方法2是
    一次输出 {"黑龙江":2,"山东":1,"北京":1}
    在输出 {"黑":2,"鲁":1,"京":1}的时候，先把黑对应的黑龙江查出来，然后一次添加到空字典
    1、新建空白字典dic3
    2、遍历循环列表，取出每一个元素的首位
       通过k1 = dic2[i]取出value，把这个value作为字典3的k1
    3、判断k1-省的全称是否属于字典3-dic3
    4、如果不属于，dic3[k1]=1
       如果已经存在，自增1 dic3[k1] += 1

"""

#第二步  然后输出 {"黑龙江":2,"山东":1,"北京":1}
dic3 = {}
for i in dic2:
    # print(i,dic2[i])
    k1 = dic2[i]
    if i in dic1:
        v1 = dic1[i]  #这个就是字典1的key对应的值vi
        # dic3[k1] =2   #完成了key的添加，这里的v1的添加是写死的
        dic3[k1] =v1   #完成了key的添加，这里的v1的添加是写死的
    #需要把v1变成字典1的key对应的值
print(dic3)  #{'上海': 1, '黑龙江': 1, '山东': 2}
print("--------------1")

# 方法2的伪代码
#     目标：一次输出 {"黑龙江":2,"山东":1,"北京":1}
#     在输出 {"黑":2,"鲁":1,"京":1}的时候，先把黑对应的黑龙江查出来，然后一次添加到空字典

#     1、新建空白字典dic3
#     2、遍历循环列表，取出每一个元素的首位
#        通过k1 = dic2[i]取出value，把这个value作为字典3的k1
#     3、判断k1-省的全称是否属于字典3-dic3
#     4、如果不属于，dic3[k1]=1
#        如果已经存在，自增1 dic3[k1] += 1
cars = ["鲁A32444", "鲁B12333", "京B8989M", "黑C46555", "沪B25041"]
dic2 = {"沪": "上海", "黑": "黑龙江", "鲁": "山东", "鄂": "湖北","京": "北京"}

dic3 = {}
for i in cars:
    i = i[0]
    # print(i)
    k1 = dic2[i]  #获取字典2的value（根据省的简称取出省的全名），作为字典3的k1
    # print(k1)
    if k1 not in dic3:  #注意点2个 这里不是i,而是k1；字典是dic3，而不是dic2  #关键点
        dic3[k1] = 1
    else:
        dic3[k1] += 1
print(dic3)











