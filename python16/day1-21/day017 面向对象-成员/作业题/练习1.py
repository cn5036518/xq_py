#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@time:  2019/12/6 6:40
#@author:wangtongpei
#@email: cn5036520@163.com

''''''
'''
1、简述面向对象三大特性并用示例解释说明？【背写】
    1、封装
        狭义的封装：把一组属性封装到一个对象，创建对象的时候
        广义的封装：代码块，函数、对象、类、模块-py文件都是封装
                   把封装后的对象看成一个黑盒子，只需要关注输入和输出，不必关注黑盒子内部的实现
    2、继承
        1、避免代码的重复
        2、可扩展
            共有的写在父类，扩展的时候用子类
    3、多态

2. 面向中的变量分为哪几种？并用示例说明区别？【背写】
    1、成员变量
        写在构造方法中的，前面是self.  局部的意思
    2、类变量（静态变量）
        写在类中方法（成员方法）之外的变量，全局的意思
        多个对象共享的

3. 面向对象中方法有哪几种？并用示例说明区别？【背写】
    1、成员方法
        1、包括构造方法和普通方法
        2、第一个参数是self
        3、通过对象来直接调用
    2、静态方法
        1、参数不需要self
        2、写法是方法名字上面加上一行@staticmethod
        3、通过类名来调用
        4、把它理解成类中的函数即可
    3、类方法
        1、参数只有一个cls，表示可以说传入类名
        2、写法是方法名字上面加上一行@classmethos
        3、通过类名来调用
        4、可以在类方法中创建对象，设计模式

4. 面向对象中的属性有什么？并用示例说明？
   定义：用方法来表示一个属性（成员变量）
   写法：方法名字上面加一行@property
        只有一个参数self
        必须有返回值（属性取的就是返回值）
   调用：对象名.方法名
         注意方法名字后面不加小括号
   例子：人的年龄
        1、成员变量中，一般不存储人的年龄，因为年龄每年都会变
        2、成员变量中，存储的是人的生日
        3、可以用成员方法，根据生日计算年龄，但是年龄是一个属性-名称
           用方法-动词计算不是特别合适
        4、就引入了用方法的变种--属性来表示年龄

5. 简述静态方法和类方法的区别？
    1、写法不同
        前者方法名字前面加上@staticmethod
        后者方法名字前面加上@classmethod
    2、参数不同
        前者的参数没有self
        后者的参数是cls
    3、含义不同
        前者可以理解成类中的函数，不需要传self，对象
        后者的参数传入的是类名，主要用于对象的创建，设计模式

'''















