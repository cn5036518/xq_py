#!/usr/bin/env python
#-*- coding:utf-8 -*-
#@time:  2020/6/25 10:39

''''''
'''
MRO
全称：method resolution order   方法解析顺序（继承顺序）

python2--深度优先（来计算mro）
1、经典类
    概念：自己就是根，不继承object
    写法：
        class Foo:
            pass
2、新式类
    概念：继承object
    写法：
        class Foo(object):
            pass

python3--c3算法（来计算mro）
只有新式类
    概念：默认继承object
    写法：
        class Foo:   #默认继承object
            pass
#注意点：
    这里如果没有菱形，深度优先就够用
    当继承关系中存在菱形的时候，不能考虑深度优先，要用c3算法来计算mro

场景：
深度优先和c3算法的区别
1、没有菱形继承关系，就采用深度优先
2、有菱形继承关系，就采用c3算法（在非菱形继承关系中，可以把c3算法近似理解成深度优先）


类的继承顺序
1、mro
2、c3算法（菱形）
    (1,(2,b,a)) (a,(b,c,d))
    c3算法的原理：
    第一步：1在（b,c,d）中查找，如果没有，1出来                           剩下(2,b,a) (a,(b,c,d))
    第二步：2在（b,c,d）中查找，如果没有，2出来                      12   剩下(b,a) (a,(b,c,d))
    第三步：b在（b,c,d）中查找，有，右边的b出来，左边的b也随之出来   12b  剩下(a) (a,(c,d))
    第四步：a在  （c,d）中查找，如果没有，a出来，右边的a也随之出来   12ba 剩下 (c,d)
    第五步：最后是12bacd  #这里顺序应该和print(类名.__mro__) 的顺序一致

3、print(类名.__mro__)  #打印类的继承关系



'''





















